//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.4.4
//     from Assets/VRInputActions.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @VRInputActions : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @VRInputActions()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""VRInputActions"",
    ""maps"": [
        {
            ""name"": ""Motorcycle Controls"",
            ""id"": ""bf505325-f42b-4040-8407-4deb3105d717"",
            ""actions"": [
                {
                    ""name"": ""Grab Handle Bars"",
                    ""type"": ""Button"",
                    ""id"": ""28d22e18-8ae2-4ebc-9902-bf885ab1cd4a"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Front Brake Grabbing"",
                    ""type"": ""Button"",
                    ""id"": ""8b44e71d-ae4d-4117-bc2f-1581efe6842f"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Clutch Grabbing"",
                    ""type"": ""Button"",
                    ""id"": ""763eac74-33cf-4d08-b4e7-50617cee55c5"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Kills Switch Starter"",
                    ""type"": ""Button"",
                    ""id"": ""47fd1a14-a5f4-45f7-a044-bd1461df4a38"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Turn Signals"",
                    ""type"": ""Button"",
                    ""id"": ""403b8080-c4c6-4808-92ef-36017b44d31f"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Horn Button"",
                    ""type"": ""Button"",
                    ""id"": ""412e4716-5ae0-4114-9191-7ebe313e5563"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Back Brake Press"",
                    ""type"": ""Button"",
                    ""id"": ""01333e13-96bb-41a4-84a4-6c26d9a6626a"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Shifter Pedal"",
                    ""type"": ""Button"",
                    ""id"": ""cc30a282-7568-4dcd-924c-905434b77dc8"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""7b03b731-fd19-4b1f-bbd5-65d368290cd1"",
                    ""path"": ""<OculusTouchController>{RightHand}/gripPressed"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Grab Handle Bars"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""95c267cf-e64a-4cf0-8a8e-1163455530d5"",
                    ""path"": ""<OculusTouchController>{LeftHand}/gripPressed"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Grab Handle Bars"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3f48ee7e-8d1f-42b9-b99a-6ec1e8c211bb"",
                    ""path"": ""<OculusTouchController>{RightHand}/triggerPressed"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Front Brake Grabbing"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""abd09180-342d-4e42-9cf0-943e18fe23b9"",
                    ""path"": ""<OculusTouchController>{LeftHand}/triggerPressed"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Clutch Grabbing"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0c595ae9-6bed-4578-a732-3f0eac048cf2"",
                    ""path"": ""<OculusTouchController>{RightHand}/primaryButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Kills Switch Starter"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f490bb24-854e-4fe4-85f1-5c5c7a111a73"",
                    ""path"": ""<OculusTouchController>{LeftHand}/thumbstickTouched"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Turn Signals"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c60e3bb2-4f84-43ec-912b-8ddbafaeb4a1"",
                    ""path"": ""<OculusTouchController>{LeftHand}/primaryButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Horn Button"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""be20080d-398b-4064-baa8-3701c962f206"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Back Brake Press"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""34771b38-e778-4d1b-b5d2-348dcfd8017e"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Shifter Pedal"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // Motorcycle Controls
        m_MotorcycleControls = asset.FindActionMap("Motorcycle Controls", throwIfNotFound: true);
        m_MotorcycleControls_GrabHandleBars = m_MotorcycleControls.FindAction("Grab Handle Bars", throwIfNotFound: true);
        m_MotorcycleControls_FrontBrakeGrabbing = m_MotorcycleControls.FindAction("Front Brake Grabbing", throwIfNotFound: true);
        m_MotorcycleControls_ClutchGrabbing = m_MotorcycleControls.FindAction("Clutch Grabbing", throwIfNotFound: true);
        m_MotorcycleControls_KillsSwitchStarter = m_MotorcycleControls.FindAction("Kills Switch Starter", throwIfNotFound: true);
        m_MotorcycleControls_TurnSignals = m_MotorcycleControls.FindAction("Turn Signals", throwIfNotFound: true);
        m_MotorcycleControls_HornButton = m_MotorcycleControls.FindAction("Horn Button", throwIfNotFound: true);
        m_MotorcycleControls_BackBrakePress = m_MotorcycleControls.FindAction("Back Brake Press", throwIfNotFound: true);
        m_MotorcycleControls_ShifterPedal = m_MotorcycleControls.FindAction("Shifter Pedal", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Motorcycle Controls
    private readonly InputActionMap m_MotorcycleControls;
    private IMotorcycleControlsActions m_MotorcycleControlsActionsCallbackInterface;
    private readonly InputAction m_MotorcycleControls_GrabHandleBars;
    private readonly InputAction m_MotorcycleControls_FrontBrakeGrabbing;
    private readonly InputAction m_MotorcycleControls_ClutchGrabbing;
    private readonly InputAction m_MotorcycleControls_KillsSwitchStarter;
    private readonly InputAction m_MotorcycleControls_TurnSignals;
    private readonly InputAction m_MotorcycleControls_HornButton;
    private readonly InputAction m_MotorcycleControls_BackBrakePress;
    private readonly InputAction m_MotorcycleControls_ShifterPedal;
    public struct MotorcycleControlsActions
    {
        private @VRInputActions m_Wrapper;
        public MotorcycleControlsActions(@VRInputActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @GrabHandleBars => m_Wrapper.m_MotorcycleControls_GrabHandleBars;
        public InputAction @FrontBrakeGrabbing => m_Wrapper.m_MotorcycleControls_FrontBrakeGrabbing;
        public InputAction @ClutchGrabbing => m_Wrapper.m_MotorcycleControls_ClutchGrabbing;
        public InputAction @KillsSwitchStarter => m_Wrapper.m_MotorcycleControls_KillsSwitchStarter;
        public InputAction @TurnSignals => m_Wrapper.m_MotorcycleControls_TurnSignals;
        public InputAction @HornButton => m_Wrapper.m_MotorcycleControls_HornButton;
        public InputAction @BackBrakePress => m_Wrapper.m_MotorcycleControls_BackBrakePress;
        public InputAction @ShifterPedal => m_Wrapper.m_MotorcycleControls_ShifterPedal;
        public InputActionMap Get() { return m_Wrapper.m_MotorcycleControls; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(MotorcycleControlsActions set) { return set.Get(); }
        public void SetCallbacks(IMotorcycleControlsActions instance)
        {
            if (m_Wrapper.m_MotorcycleControlsActionsCallbackInterface != null)
            {
                @GrabHandleBars.started -= m_Wrapper.m_MotorcycleControlsActionsCallbackInterface.OnGrabHandleBars;
                @GrabHandleBars.performed -= m_Wrapper.m_MotorcycleControlsActionsCallbackInterface.OnGrabHandleBars;
                @GrabHandleBars.canceled -= m_Wrapper.m_MotorcycleControlsActionsCallbackInterface.OnGrabHandleBars;
                @FrontBrakeGrabbing.started -= m_Wrapper.m_MotorcycleControlsActionsCallbackInterface.OnFrontBrakeGrabbing;
                @FrontBrakeGrabbing.performed -= m_Wrapper.m_MotorcycleControlsActionsCallbackInterface.OnFrontBrakeGrabbing;
                @FrontBrakeGrabbing.canceled -= m_Wrapper.m_MotorcycleControlsActionsCallbackInterface.OnFrontBrakeGrabbing;
                @ClutchGrabbing.started -= m_Wrapper.m_MotorcycleControlsActionsCallbackInterface.OnClutchGrabbing;
                @ClutchGrabbing.performed -= m_Wrapper.m_MotorcycleControlsActionsCallbackInterface.OnClutchGrabbing;
                @ClutchGrabbing.canceled -= m_Wrapper.m_MotorcycleControlsActionsCallbackInterface.OnClutchGrabbing;
                @KillsSwitchStarter.started -= m_Wrapper.m_MotorcycleControlsActionsCallbackInterface.OnKillsSwitchStarter;
                @KillsSwitchStarter.performed -= m_Wrapper.m_MotorcycleControlsActionsCallbackInterface.OnKillsSwitchStarter;
                @KillsSwitchStarter.canceled -= m_Wrapper.m_MotorcycleControlsActionsCallbackInterface.OnKillsSwitchStarter;
                @TurnSignals.started -= m_Wrapper.m_MotorcycleControlsActionsCallbackInterface.OnTurnSignals;
                @TurnSignals.performed -= m_Wrapper.m_MotorcycleControlsActionsCallbackInterface.OnTurnSignals;
                @TurnSignals.canceled -= m_Wrapper.m_MotorcycleControlsActionsCallbackInterface.OnTurnSignals;
                @HornButton.started -= m_Wrapper.m_MotorcycleControlsActionsCallbackInterface.OnHornButton;
                @HornButton.performed -= m_Wrapper.m_MotorcycleControlsActionsCallbackInterface.OnHornButton;
                @HornButton.canceled -= m_Wrapper.m_MotorcycleControlsActionsCallbackInterface.OnHornButton;
                @BackBrakePress.started -= m_Wrapper.m_MotorcycleControlsActionsCallbackInterface.OnBackBrakePress;
                @BackBrakePress.performed -= m_Wrapper.m_MotorcycleControlsActionsCallbackInterface.OnBackBrakePress;
                @BackBrakePress.canceled -= m_Wrapper.m_MotorcycleControlsActionsCallbackInterface.OnBackBrakePress;
                @ShifterPedal.started -= m_Wrapper.m_MotorcycleControlsActionsCallbackInterface.OnShifterPedal;
                @ShifterPedal.performed -= m_Wrapper.m_MotorcycleControlsActionsCallbackInterface.OnShifterPedal;
                @ShifterPedal.canceled -= m_Wrapper.m_MotorcycleControlsActionsCallbackInterface.OnShifterPedal;
            }
            m_Wrapper.m_MotorcycleControlsActionsCallbackInterface = instance;
            if (instance != null)
            {
                @GrabHandleBars.started += instance.OnGrabHandleBars;
                @GrabHandleBars.performed += instance.OnGrabHandleBars;
                @GrabHandleBars.canceled += instance.OnGrabHandleBars;
                @FrontBrakeGrabbing.started += instance.OnFrontBrakeGrabbing;
                @FrontBrakeGrabbing.performed += instance.OnFrontBrakeGrabbing;
                @FrontBrakeGrabbing.canceled += instance.OnFrontBrakeGrabbing;
                @ClutchGrabbing.started += instance.OnClutchGrabbing;
                @ClutchGrabbing.performed += instance.OnClutchGrabbing;
                @ClutchGrabbing.canceled += instance.OnClutchGrabbing;
                @KillsSwitchStarter.started += instance.OnKillsSwitchStarter;
                @KillsSwitchStarter.performed += instance.OnKillsSwitchStarter;
                @KillsSwitchStarter.canceled += instance.OnKillsSwitchStarter;
                @TurnSignals.started += instance.OnTurnSignals;
                @TurnSignals.performed += instance.OnTurnSignals;
                @TurnSignals.canceled += instance.OnTurnSignals;
                @HornButton.started += instance.OnHornButton;
                @HornButton.performed += instance.OnHornButton;
                @HornButton.canceled += instance.OnHornButton;
                @BackBrakePress.started += instance.OnBackBrakePress;
                @BackBrakePress.performed += instance.OnBackBrakePress;
                @BackBrakePress.canceled += instance.OnBackBrakePress;
                @ShifterPedal.started += instance.OnShifterPedal;
                @ShifterPedal.performed += instance.OnShifterPedal;
                @ShifterPedal.canceled += instance.OnShifterPedal;
            }
        }
    }
    public MotorcycleControlsActions @MotorcycleControls => new MotorcycleControlsActions(this);
    public interface IMotorcycleControlsActions
    {
        void OnGrabHandleBars(InputAction.CallbackContext context);
        void OnFrontBrakeGrabbing(InputAction.CallbackContext context);
        void OnClutchGrabbing(InputAction.CallbackContext context);
        void OnKillsSwitchStarter(InputAction.CallbackContext context);
        void OnTurnSignals(InputAction.CallbackContext context);
        void OnHornButton(InputAction.CallbackContext context);
        void OnBackBrakePress(InputAction.CallbackContext context);
        void OnShifterPedal(InputAction.CallbackContext context);
    }
}
